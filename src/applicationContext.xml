<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<!-- 引入外部的配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 配置连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<!-- 配置Hibernate的相关属性 -->
	<!-- c3p0数据源的配置，这里也可以设置连接池的大小等等 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- 注入连接池 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置Hibernate的属性 -->
		<property name="hibernateProperties">
			<props>
				<!-- 数据库方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- 打印sql语句 -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- 格式化sql语句 -->
				<prop key="hibernate.format_sql">true</prop>
				<!-- 当构建SessionFactory对象时，通过映射文件自动创建表 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<!-- 加载Hibernate中的映射文件 -->
		<property name="mappingResources">
			<list>
				<value>com/bianfeng/employee/domain/Department.hbm.xml</value>
				<value>com/bianfeng/employee/domain/Employee.hbm.xml</value>
			</list>
		</property>
	</bean>
	<bean id="productAction" class="com.bianfeng.ssh.action.ProductAction"
		scope="prototype">
		<!-- scope="prototype" 支持多例创建 -->
		<!-- 手动注入services 可以使用aop增强操作 -->
		<property name="productServices" ref="productServices" />
	</bean>
	<!-- 配置action的类 -->
	<bean id="employeeAction" class="com.bianfeng.employee.action.EmployeeAction"
		scope="prototype">
		<property name="employeeService" ref="employeeService"></property>
	</bean>
	<bean id="departmentAction" class="com.bianfeng.employee.action.DepartmentAction"
		scope="prototype">
		<property name="departmentService" ref="departmentService"></property>
	</bean>
	<!-- 配置业务层的类 -->
	<bean id="employeeService" class="com.bianfeng.employee.service.impl.EmployeeServiceImpl">
		<property name="employeeDao" ref="employeeDao"/>
	</bean>
	<bean id="departmentService"
		class="com.bianfeng.employee.service.impl.DepartmentServiceImpl">
		<property name="departmentDao" ref="departmentDao"/>
	</bean>
	<!-- 配置Dao的类 -->
	<bean id="employeeDao" class="com.bianfeng.employee.dao.impl.EmployeeDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="departmentDao" class="com.bianfeng.employee.dao.impl.DepartmentDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>


	<!-- 启用AOP功能 -->
	<!-- <aop:aspectj-autoproxy></aop:aspectj-autoproxy> -->
	<!-- 声明事务管理AOP功能 -->
	<!-- <aop:config> <aop:advisor advice-ref="transactionAdvice" pointcut="execution(* 
		com.ljh.egov..service.*.*(..))"/> </aop:config> <tx:advice id="transactionAdvice" 
		transaction-manager="transactionManager"> <tx:attributes> <tx:method name="save*" 
		propagation="REQUIRED" isolation="DEFAULT" rollback-for="java.lang.Exception"/> 
		<tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="java.lang.Exception"/> 
		<tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="java.lang.Exception"/> 
		<tx:method name="select*" read-only="true"/> </tx:attributes> </tx:advice> -->
</beans>